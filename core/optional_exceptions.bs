<pre class='metadata'>
Title: Make Exceptions and Company Optional for Freestanding Implementations
Shortname: D0000
Revision: 0
Audience: SG14, EWG
Status: D
Group: WG21
URL: http://example.com/url-this-spec-will-live-at
!Source: <a href="https://github.com/ben-craig/freestanding_proposal/blob/master/core/optional_exceptions.bs">github.com/ben-craig/freestanding_proposal/blob/master/core/optional_exceptions.bs</a>
Editor: Ben Craig &lt;ben dot craig at gmail dot com&gt;
Abstract: Making core language features (like exceptions) optional in freestanding mode if they have an OS dependency or incur space overhead.
</pre>

Introduction {#intro}
=====================

Introduction here.
Something about Embedded C++ and the Embedded Template Library


Features going optional {#features}
===================================

Exceptions {#exceptions}
------------------------
### What am I changing? ### {#exception_what}

### Why? ### {#exception_why}
What about re-throw, try, catch, uncaught_exceptions?  terminate?
noexcept?
Relation to d0709

RTTI {#rtti}
------------
### What am I changing? ### {#rtti_what}

### Why? ### {#rtti_why}
Potential change in ABI

Default heap storage {#heap}
----------------------------
### What am I changing? ### {#heap_what}

### Why? ### {#heap_why}
Related, virtual destructors

Thread local storage {#tls}
---------------------------
### What am I changing? ### {#tls_what}

### Why? ### {#tls_why}

Floating point {#float}
-----------------------
### What am I changing? ### {#float_what}

### Why? ### {#float_why}

Program startup and teardown {#startup_teardown}
------------------------------------------------
### What am I changing? ### {#startup_teardown_what}

### Why? ### {#startup_teardown_why}

Function local statics {#function_statics}
------------------------------------------
### What am I changing? ### {#function_statics_what}

### Why? ### {#function_statics_why}

Locked atomics {#locked_atomics}
--------------------------------
### What am I changing? ### {#locked_atomics_what}

### Why? ### {#locked_atomics_why}

Common QoI issues {#qoi}
=================
Pure virtual functions


